<nav class="navbar navbar-expand-lg navbar-dark bg-primary">
    <a class="navbar-brand" href="#">NuPath</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#collapsibleNavbar">
      <span class="navbar-toggler-icon"></span>
    </button>
    <div class="collapse navbar-collapse" id="collapsibleNavbar">
      <ul class="navbar-nav ms-auto">
        <li class="nav-item">
          <a class="nav-link" aria-current="page" href="/">Home</a>
        </li>
        <li class="nav-item">
          <a class="nav-link " href="/messages">Messages</a>
        </li>
        <li class="nav-item dropdown">
          <a class="nav-link dropdown-toggle active" href="#" id="navbardrop" data-toggle="dropdown">
            Information
          </a>
          <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
            <li><a class="dropdown-item " href="/residence_halls">Residence Halls</a></li>
            <li><a class="dropdown-item" href="https://www.ncf.edu/life-at-new/where-to-eat/">On-campus Dining</a></li>
            <li><a class="dropdown-item" href="/supplies">Supplies</a></li>
            <li><a class="dropdown-item" href="/events">Campus Events</a></li>
            <li><a class="dropdown-item" href="/sarasota">Sarasota</a></li>
            <li><a class = "dropdown-item" href="/schedule">Scheduler</a></li>
          </ul>
  
        </li>
          <li class="nav-item">
            <a class="nav-link" href="/leaderboard">Leaderboard</a>
          </li>
          <li class="nav-item">
            <a class="nav-link" href="/profile">Profile</a>
          </li>    
        </ul>
      </div>  

    </nav>




    <body>
      <br>
      <h1 class="subheadLightBlue">My Schedule</h1>
      <br>
      <br>


      <!-- Coding By CodingNepal - youtube.com/codingnepal -->
      <html lang="en" dir="ltr">



          <!-- Google Font Link for Icons -->
          <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Material+Symbols+Rounded:opsz,wght,FILL,GRAD@20..48,100..700,0..1,-50..200">

        <body>
          <div class="wrapper">
            <header>
              <p class="current-date"></p>
              <div class="icons">
                <span id="prev" class="material-symbols-rounded">chevron_left</span>
                <span id="next" class="material-symbols-rounded">chevron_right</span>
              </div>
            </header>
            <div class="calendar">
              <ul class="weeks">
                <li>Sun</li>
                <li>Mon</li>
                <li>Tue</li>
                <li>Wed</li>
                <li>Thu</li>
                <li>Fri</li>
                <li>Sat</li>
              </ul>
              <ul class="days"></ul>
            </div>
          </div>


          <div class = "container-fluid">

              <div class = "row">
                <div class = "col-sm-6">
                  <div>
                    <button id="createEvent" class="createEvent">Create Event</button>
                </div>
                <br>
                <br>
                <br>
                <div class = "col-sm-6">
                  <label for="eventDate">View Events On:</label>
                  <input type="date" id="eventDate" name="eventDate">
                </div>
                
                <button type="submit" class="endButton" onclick="dateFormdata()">Submit</button>
              </div>
          </div>

          <br>
          <br>
          <h3>Today's Events</h3>

          <div>
            <ul id="todaysEvents">
              <li>Event Name from start to end time</li>
          </ul>
        </div>
         
          
          
          
          <div class="events-wrapper" style="margin: 30px 150px;">
            <!-- This will get's the posts from new_post.ejs-->
          </div>
          
          


          <div id="eventData" data-event="<%=eventData%>"></div> 
        
      
    </body>

    <style>
      @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;600&display=swap');
*{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Poppins', sans-serif;
}
body{
  display: flex;
  align-items: center;
  padding: 0 10px;
  justify-content: center;
  min-height: 100vh;

}
.createEvent{
  background-color: #0000FF;
  border:#0000FF;
  color: white;
  border: none;
  outline: none;
  float: left;
  cursor: pointer;
  padding: 5px 5px;
}
.wrapper{
  align-items: center;
  /*width: 450px;*/
  max-width: 100%;
  height: auto;
  background: #fff;
  border-radius: 10px;
  box-shadow: 0 15px 40px rgba(0,0,0,0.12);
}
.wrapper header{
  display: flex;
  align-items: center;
  padding: 25px 30px 10px;
  justify-content: space-between;
}
header .icons{
  display: flex;
}
header .icons span{
  height: 50%;
  width: 50%;
  margin: 0 1px;
  cursor: pointer;
  color: #878787;
  text-align: center;
  line-height: 38px;
  font-size: 1.9rem;
  user-select: none;
  border-radius: 50%;
}
.icons span:last-child{
  margin-right: -10px;
}
header .icons span:hover{
  background: #f2f2f2;
}
header .current-date{
  font-size: 1.45rem;
  font-weight: 500;
}
.calendar{
  padding: 20px;
}
.calendar ul{
  display: flex;
  flex-wrap: wrap;
  list-style: none;
  text-align: center;
}
.calendar .days{
  margin-bottom: 20px;
}
.calendar li{
  color: #333;
  width: calc(100% / 7);
  font-size: 1.07rem;
}
.calendar .weeks li{
  font-weight: 500;
  cursor: default;
}
.calendar .days li{
  z-index: 1;
  cursor: pointer;
  position: relative;
  margin-top: 30px;
}
.days li.inactive{
  color: #aaa;
}
.days li.active{
  color: #fff;
}
.days li::before{
  position: absolute;
  content: "";
  left: 50%;
  top: 50%;
  height: 40px;
  width: 40px;
  z-index: -1;
  border-radius: 50%;
  transform: translate(-50%, -50%);
}
.days li.active::before{
  background: #9B59B6;
}
.days li:not(.active):hover::before{
  background: #f2f2f2;
}
       
</style>
<script>
  function dateFormdata() 
  {
    var eventDates = document.getElementById("eventDate").value;

    $("#todaysEvents").empty();

    let eventData = $("#eventData").data("event");

      eventData = eventData.filter(a => {
        var date = new Date(a.eventDate);
        var start = new Date(eventDates);
        start.setUTCHours(0,0,0,0);

        var end = new Date(eventDates);
        end.setUTCHours(23,59,59,999);
      return (date >= start && date <= end);
     });
    console.log(eventData);

    for(i = 0; i < eventData.length; i++){
      $("#todaysEvents").append(`<li>${eventData[i].subject} from ${eventData[i].startTime} to ${eventData[i].endTime}</li>`)

    }


    //need to write the route page for this
  /*  $.ajax({
      url:  '/scheduler/fetchEvent',
      type: 'GET',
      data: {startDate: eventDate},
      success: function(result) {
          console.log("success");
          if(result.error)
          {
            Swal.fire({ //show error alert
            title: "Error",
            text: result.error,
            icon: "error"
          });
            console.log("error");
          }
          else
          {
            window.location.href = "/scheduler";
          }
      }
    }); */
  }
  </script>


<script>
 $(document).ready(() => {console.log($("#eventData").data('event'))});
 let event = $("#eventData").data("event"); //get account info from data-account attribute
    
  $("#createEvent").on("click", () => {
    window.location.href = "/new_event";
  });

  


// Template post


  
  // sort the posts by date
  


</script>


<script>
  const daysTag = document.querySelector(".days"),
currentDate = document.querySelector(".current-date"),
prevNextIcon = document.querySelectorAll(".icons span");
// getting new date, current year and month
let date = new Date(),
currYear = date.getFullYear(),
currMonth = date.getMonth();
// storing full name of all months in array
const months = ["January", "February", "March", "April", "May", "June", "July",
              "August", "September", "October", "November", "December"];
const renderCalendar = () => {
    let firstDayofMonth = new Date(currYear, currMonth, 1).getDay(), // getting first day of month
    lastDateofMonth = new Date(currYear, currMonth + 1, 0).getDate(), // getting last date of month
    lastDayofMonth = new Date(currYear, currMonth, lastDateofMonth).getDay(), // getting last day of month
    lastDateofLastMonth = new Date(currYear, currMonth, 0).getDate(); // getting last date of previous month
    let liTag = "";
    for (let i = firstDayofMonth; i > 0; i--) { // creating li of previous month last days
        liTag += `<li class="inactive">${lastDateofLastMonth - i + 1}</li>`;
    }
    for (let i = 1; i <= lastDateofMonth; i++) { // creating li of all days of current month
        // adding active class to li if the current day, month, and year matched
        let isToday = i === date.getDate() && currMonth === new Date().getMonth() 
                     && currYear === new Date().getFullYear() ? "active" : "";
        liTag += `<li class="${isToday}">${i}</li>`;
    }
    for (let i = lastDayofMonth; i < 6; i++) { // creating li of next month first days
        liTag += `<li class="inactive">${i - lastDayofMonth + 1}</li>`
    }
    currentDate.innerText = `${months[currMonth]} ${currYear}`; // passing current mon and yr as currentDate text
    daysTag.innerHTML = liTag;
}
renderCalendar();
prevNextIcon.forEach(icon => { // getting prev and next icons
    icon.addEventListener("click", () => { // adding click event on both icons
        // if clicked icon is previous icon then decrement current month by 1 else increment it by 1
        currMonth = icon.id === "prev" ? currMonth - 1 : currMonth + 1;
        if(currMonth < 0 || currMonth > 11) { // if current month is less than 0 or greater than 11
            // creating a new date of current year & month and pass it as date value
            date = new Date(currYear, currMonth, new Date().getDate());
            currYear = date.getFullYear(); // updating current year with new date year
            currMonth = date.getMonth(); // updating current month with new date month
        } else {
            date = new Date(); // pass the current date as date value
        }
        renderCalendar(); // calling renderCalendar function
    });
});
  </script>